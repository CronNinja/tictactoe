{"version":3,"sources":["js/Square.jsx","js/Board.jsx","js/calculateWinner.js","js/TableIT.jsx","js/Game.js","js/App.js","index.js"],"names":["Square","props","Button","variant","className","onClick","value","Board","i","this","squares","grid","push","renderSquare","generateGrid","React","Component","calculateWinner","lines","length","a","b","c","TableIT","rowItems","name","Table","striped","bordered","hover","map","item","index","Game","reset","setState","baseState","state","history","Array","fill","stepNumber","xIsNext","log","slice","turn","concat","Math","floor","step","status","current","winner","moves","move","desc","jumpTo","Container","Row","Col","md","span","offset","handleClick","App","Jumbotron","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea2c57a7.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nfunction Square(props) {\n  return (\n    <Button variant=\"secondary\" className=\"square\" onClick={ props.onClick }>\n      {props.value}\n    </Button>\n  );\n}\n\nexport default Square","import React from 'react';\nimport Square from './Square';\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        key = {i}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  generateGrid(){\n    let grid = [];\n    for(let i = 0; i <9; i++){\n      grid.push(this.renderSquare(i));\n    }\n    return (grid);\n  }\n  render() {\n    return (\n      <div className=\"grid-container\">\n          {this.generateGrid()}\n      </div>\n    );\n  }\n}","function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default calculateWinner","import Table from 'react-bootstrap/Table';\n\nfunction TableIT({rowItems, name}) {\n  return (\n    <Table striped bordered hover>\n    <thead>\n      <tr>\n        <th>{ name }</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        rowItems.map((item, index) => (\n          <tr key={\"table-\" + index + \"-\" + item}>\n            <td>{ item }</td>\n        </tr>\n        ))\n      }\n    </tbody>\n  </Table>\n  );\n}\n\nexport default TableIT","import React from 'react';\nimport Board from './Board'\nimport calculateWinner from './calculateWinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport TableIT from './TableIT';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      log: []\n    };\n    this.baseState = this.state;\n  }\n  reset = () => {\n    this.setState(this.baseState);\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const turn = this.state.xIsNext ? \"X\" : \"O\";\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = turn;\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      log: this.state.log.concat([turn + \" Selected: \" + i%3 + '|' + Math.floor(i/3)])\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n      log: this.state.log.concat([\"Time Traveled to move: \" + step])\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <Button onClick={() => this.jumpTo(move)}>{desc}</Button>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col md={4}><h2>{ status }</h2></Col>\n          <Col md={{ span: 4, offset: 4 }}><Button variant=\"danger\" onClick={this.reset}>Reset</Button></Col>\n        </Row>\n\n        <Row className=\"game-board justify-content-md-center\">\n            <Board\n              squares={current.squares}\n              onClick={i => this.handleClick(i)}\n            />\n        </Row>\n        <Row>\n          <Col md=\"auto\">\n            <TableIT rowItems={ moves } name=\"Time Travel\"/>\n          </Col>\n          <Col md=\"auto\">\n            <TableIT rowItems={ this.state.log } name=\"Log\"/>\n          </Col>\n        </Row>\n        \n      </Container>\n    );\n  }\n}","import Game from './Game';\nimport '../css/index.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nfunction App() {\n  return (\n    <>\n      <Jumbotron>\n        <Container>\n          <h1>Tic Tac Toe</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n          <Game />\n      </Container>\n    </> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}