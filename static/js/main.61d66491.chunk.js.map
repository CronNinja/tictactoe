{"version":3,"sources":["js/Square.jsx","js/Board.jsx","js/calculateWinner.js","js/TableIt.jsx","js/Popit.jsx","js/ToastIt.jsx","js/AI.js","js/Game.js","index.js"],"names":["Square","props","Button","variant","className","onClick","value","Board","i","this","squares","grid","push","renderSquare","generateGrid","React","Component","calculateWinner","lines","length","a","b","c","TableIt","rowItems","name","Table","striped","bordered","hover","map","item","index","Popit","state","show","handleShow","bind","handleClose","setState","buttonColor","title","Modal","onHide","animation","size","scrollable","Header","closeButton","Title","Body","Footer","ToastIt","Toast","style","position","bottom","right","onClose","delay","autohide","toggleText","AI","availableIndexes","Math","floor","random","randomPick","Array","from","keys","filter","Game","reset","baseState","history","fill","stepNumber","score","x","o","xIsNext","log","showToast","com","toggleToast","slice","current","turn","concat","console","setTimeout","updateGameboard","step","status","winner","moves","move","desc","jumpTo","Navbar","bg","Container","Brand","href","playCom","disabled","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d66491.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\r\nfunction Square(props) {\r\n  return (\r\n    <Button variant=\"secondary\" className=\"square\" onClick={ props.onClick }>\r\n      {props.value}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Square","import React from 'react';\r\nimport Square from './Square';\r\n\r\nexport default class Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        key = {i}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  generateGrid(){\r\n    let grid = [];\r\n    for(let i = 0; i <9; i++){\r\n      grid.push(this.renderSquare(i));\r\n    }\r\n    return (grid);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container\">\r\n          {this.generateGrid()}\r\n      </div>\r\n    );\r\n  }\r\n}","function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default calculateWinner","import Table from 'react-bootstrap/Table';\r\n\r\nfunction TableIt({rowItems, name}) {\r\n  return (\r\n    <Table striped bordered hover>\r\n    <tbody>\r\n      {\r\n        rowItems.map((item, index) => (\r\n          <tr key={\"table-\" + index + \"-\" + item}>\r\n            <td>{ item }</td>\r\n        </tr>\r\n        ))\r\n      }\r\n    </tbody>\r\n  </Table>\r\n  );\r\n}\r\n\r\nexport default TableIt","import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\nimport TableIt from './TableIt';\r\n\r\nexport default class Popit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    }\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n  handleClose(){\r\n   this.setState({ show: false });\r\n  }\r\n  handleShow(){\r\n    this.setState({ show: true });\r\n  }\r\n  render(){\r\n    return (\r\n      <>\r\n        <Button variant={this.props.buttonColor} onClick={this.handleShow}>\r\n        { this.props.title }\r\n        </Button>\r\n  \r\n        <Modal show={this.state.show} onHide={this.handleClose} animation={ false } size=\"sm\" scrollable=\"true\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{ this.props.title }</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><TableIt rowItems={ this.props.rowItems } /></Modal.Body>\r\n          <Modal.Footer>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n}","import Toast from 'react-bootstrap/Toast';\r\nimport React from 'react';\r\n\r\nexport default class ToastIt extends React.Component {\r\n  render(){\r\n    return (\r\n      <>\r\n        <Toast\r\n            style={{ position: 'absolute', bottom: 0, right: 0 }}\r\n            onClose={ this.props.onClose } show={ this.props.show } animation={ false } delay={2000} autohide>\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{ this.props.toggleText }</strong>\r\n          </Toast.Header>\r\n        </Toast>\r\n      </>\r\n    );\r\n  }\r\n  \r\n}","const randomPick = (availableIndexes) => {\r\n    return availableIndexes[Math.floor(Math.random()* availableIndexes.length)];\r\n}\r\nconst AI = (state) => {\r\n    const indexes = Array.from(Array(state.length).keys());\r\n    const availableIndexes = indexes.filter((index) => state[index] === null);\r\n    return randomPick(availableIndexes);\r\n}\r\n\r\nexport default AI","import React from 'react';\r\nimport '../css/index.css';\r\nimport Board from './Board'\r\nimport calculateWinner from './calculateWinner';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Popit from './Popit';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport ToastIt from './ToastIt';\r\nimport AI from './AI'\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      score: { x: 0, o: 0},\r\n      xIsNext: false,\r\n      log: [],\r\n      showToast: false,\r\n      com: [false, false]\r\n    };\r\n    this.baseState = this.state;\r\n    this.toggleToast = this.toggleToast.bind(this);\r\n  }\r\n  reset = () => {\r\n    this.setState(this.baseState);\r\n  }\r\n  updateGameboard(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const turn = this.state.xIsNext ? \"X\" : \"O\";\r\n    const winner = calculateWinner(squares);\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = turn;\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n      log: this.state.log.concat([turn + \" Selected: \" + i%3 + '|' + Math.floor(i/3)]),\r\n      showToast: true\r\n    });\r\n    if((this.state.com[0] && this.state.xIsNext) || (this.state.com[1] && !this.state.xIsNext)){\r\n      console.log(current)\r\n      setTimeout(() => { this.updateGameboard(AI(squares)) }, 1000);\r\n    }\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      log: this.state.log.concat([\"Time Traveled to move: \" + step])\r\n    });\r\n  }\r\n\r\n  toggleToast(){\r\n    this.setState({\r\n      showToast: false\r\n    });\r\n  }\r\n\r\n  playCom(){\r\n  //  this.setState({ com: [true, true] });\r\n  //  this.handleClick(Math.floor(Math.random()* 8));\r\n  console.log(this.state)\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <Button onClick={() => this.jumpTo(move)}>{desc}</Button>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Navbar variant=\"dark\" bg=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#\">TicTacToe</Navbar.Brand>\r\n            <Popit title=\"Time Travel\" rowItems={ moves } buttonColor={\"success\"}/>\r\n            <Popit title=\"Log\" rowItems={ this.state.log }/>\r\n            <Button variant=\"info\" onClick={ this.playCom} disabled={(!this.state.com[0] || !this.state.com[1])}>Auto</Button>\r\n            <Button variant=\"danger\" onClick={ this.reset }>Reset</Button>\r\n          </Container>\r\n        </Navbar>\r\n        <Container>\r\n          <Row>\r\n            <h4>{ status }</h4>\r\n          </Row>\r\n          <Row className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={i => this.updateGameboard(i)}\r\n            />\r\n          </Row>\r\n        </Container>\r\n        <ToastIt toggleText={ this.state.log[this.state.log.length - 1]} show={ this.state.showToast} onClose={ this.toggleToast }/>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './js/Game';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}